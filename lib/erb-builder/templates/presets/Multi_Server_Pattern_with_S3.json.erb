{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Multi DataCenter pattern with S3. (ELB x 1, EC2 x 2, S3 Bucket x 1)",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String"
        },
        "EC2InstanceInstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "m3.medium",
            "AllowedValues": <%= fragment(:ec2_instance_types_hvm) %>,
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "S3BucketBucketName": {
            "Description": "The name of S3Bucket",
            "Type": "String",
            "Default": "backup"
        },
        "S3BucketAccessControl": {
            "Description": "grants predefined permissions to the bucket.",
            "Type": "String",
            "Default": "Private",
            "AllowedValues": [
                "Private",
                "PublicRead",
                "PublicReadWrite",
                "AuthenticatedRead",
                "LogDeliveryWrite",
                "BucketOwnerRead",
                "BucketOwnerFullControl"
            ]
        },
        "BlockDeviceVolumeSize": {
            "Description": "Root volume size",
            "Type": "String",
            "Default": "8"
        },
        "BlockDeviceVolumeType": {
            "Description": "Root volume type. gp2 for General Purpose (SSD) volumes, standard for Magnetic volumes.",
            "Type": "String",
            "Default": "standard",
            "AllowedValues": [
                "gp2",
                "standard"
            ]
        }
    },
    "Mappings": {
        "RegionMap": <%= fragment(:ami_mappings) %>
    },
    "Resources": {
        "ElasticLoadBalancer" : {
          "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
          "Properties" : {
            "AvailabilityZones" : { "Fn::GetAZs" : "" },
            "Instances" : [{ "Ref" : "EC2a" }, { "Ref" : "EC2b" }],
            "Listeners" : [ {
              "LoadBalancerPort" : "80",
              "InstancePort" : "80",
              "Protocol" : "HTTP"
            }],
            "HealthCheck" : {
              "Target" : "HTTP:80/",
              "HealthyThreshold" : "3",
              "UnhealthyThreshold" : "5",
              "Interval" : "30",
              "Timeout" : "5"
            }
          }
        },
        "EC2a": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": { "Ref": "EC2InstanceInstanceType" },
                "KeyName": { "Ref": "KeyName" },
                "ImageId": {
                    "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "AMI"]
                },
                "AvailabilityZone": {
                    "Fn::Select" : ["0", { "Fn::GetAZs" : "" }]
                },
                "Tags": [{ "Key": "Name", "Value": "EC2a" }],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeSize": { "Ref": "BlockDeviceVolumeSize"},
                            "VolumeType": { "Ref": "BlockDeviceVolumeType"}
                        }
                    }
                ]
            }
        },
        "EC2b": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": { "Ref": "EC2InstanceInstanceType" },
                "KeyName": { "Ref": "KeyName" },
                "ImageId": {
                    "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "AMI"]
                },
                "AvailabilityZone": {
                    "Fn::Select" : ["0", { "Fn::GetAZs" : "" }]
                },
                "Tags": [{ "Key": "Name", "Value": "EC2b" }],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeSize": { "Ref": "BlockDeviceVolumeSize"},
                            "VolumeType": { "Ref": "BlockDeviceVolumeType"}
                        }
                    }
                ]
            }
        },
        "EC2aEIP" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
              "InstanceId" : { "Ref" : "EC2a" }
            }
        },
        "EC2bEIP" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
              "InstanceId" : { "Ref" : "EC2b" }
            }
        },
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": { "Ref": "S3BucketAccessControl" },
                "BucketName":    { "Ref": "S3BucketBucketName" }
            }
        }
    }
}
